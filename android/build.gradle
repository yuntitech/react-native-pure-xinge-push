buildscript {
    // Buildscript is evaluated before everything else so we can't use safeExtGet
    def kotlinVersion = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : '1.3.40'

    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 28)
    buildToolsVersion safeExtGet('buildToolsVersion', '28.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 28)
        versionCode 1
        versionName "1.0"

        consumerProguardFiles 'proguard-rules.pro'
        manifestPlaceholders = [
                XG_ACCESS_ID: "",
                XG_ACCESS_KEY: "",
                HW_APPID: "",
        ]
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${safeExtGet('kotlinVersion', '1.3.40')}"

    implementation "me.leolin:ShortcutBadger:1.1.22@aar"

    implementation'com.tencent.xinge:xinge:4.3.7-release'
    // jg包
    implementation'com.tencent.jg:jg:1.1'
    // wup包
    implementation 'com.tencent.wup:wup:1.0.0.E-release'
    // mid包，minSdkVersion 14
    implementation 'com.tencent.mid:mid:4.0.7-Release'

    implementation 'com.tencent.xinge:mipush:4.3.2-xiaomi-release'
//     implementation 'com.tencent.xinge:xgmz:4.3.2-meizu-release'
//     implementation 'com.tencent.xinge:xghw:4.3.2-huawei-release'

}

apply plugin: 'kotlin-android'